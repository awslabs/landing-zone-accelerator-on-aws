// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SecurityResourcesStack Construct(SecurityResourcesStack):  Snapshot Test 1`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/cloudwatch/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/lambda/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmss3keyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/s3/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmssnstopickeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/snstopic/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AcceleratorAlbHttpDropInvalidHeaderEnabled699B715A": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-alb-http-drop-invalid-header-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ALB_HTTP_DROP_INVALID_HEADER_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorApiGwCacheEnabledAndEncrypted090286F1": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-api-gw-cache-enabled-and-encrypted",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ApiGateway::Stage",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "API_GW_CACHE_ENABLED_AND_ENCRYPTED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorApiGwExecutionLoggingEnabledDA00B249": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-api-gw-execution-logging-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ApiGateway::Stage",
            "AWS::ApiGatewayV2::Stage",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "API_GW_EXECUTION_LOGGING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorAttachEc2InstanceProfile1DAEB489": {
      "DependsOn": [
        "AcceleratorAttachEc2InstanceProfileFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI5AF7FE49",
        "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
        "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-attach-ec2-instance-profile",
        "Description": "Custom rule for checking EC2 instance IAM profile attachment",
        "InputParameters": {},
        "MaximumExecutionFrequency": "Six_Hours",
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "CUSTOM_LAMBDA",
          "SourceDetails": [
            {
              "EventSource": "aws.config",
              "MessageType": "ConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MessageType": "OversizedConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MaximumExecutionFrequency": "Six_Hours",
              "MessageType": "ScheduledNotification",
            },
          ],
          "SourceIdentifier": {
            "Fn::GetAtt": [
              "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorAttachEc2InstanceProfileFunction2F25082F": {
      "DependsOn": [
        "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS Config custom rule function used for "accelerator-attach-ec2-instance-profile" rule",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 3,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorAttachEc2InstanceProfileFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI5AF7FE49": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
            "Arn",
          ],
        },
        "Principal": "config.amazonaws.com",
        "SourceAccount": "111111111111",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Config custom rule needs managed readonly access policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorAttachEc2InstanceProfileLambdaRolePolicy9BC7815F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule custom lambda role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:Describe*",
                "ec2:Get*",
                "ec2:ListSnapshotsInRecycleBin",
                "ec2:SearchLocalGatewayRoutes",
                "ec2:SearchTransitGatewayRoutes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorAttachEc2InstanceProfileLambdaRolePolicy9BC7815F",
        "Roles": [
          {
            "Ref": "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorAttachEc2InstanceProfileLogGroup19DCB538": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorAttachEc2InstanceProfileRemediation": {
      "DependsOn": [
        "AcceleratorAttachEc2InstanceProfile1DAEB489",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-attach-ec2-instance-profile",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorAttachEc2InstanceProfileRemediationRole0804271B",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "IamInstanceProfile": {
            "StaticValue": {
              "Values": [
                "EC2-Default-SSM-AD-Role",
              ],
            },
          },
          "InstanceId": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Attach-IAM-Instance-Profile",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorAttachEc2InstanceProfileRemediationRole0804271B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorAttachEc2InstanceProfileRemediationRoleDefaultPolicy820C0688": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Attach-IAM-Instance-Profile",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ec2:AssociateIamInstanceProfile",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "iam:PassRole",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorAttachEc2InstanceProfileRemediationRoleDefaultPolicy820C0688",
        "Roles": [
          {
            "Ref": "AcceleratorAttachEc2InstanceProfileRemediationRole0804271B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailB1588991": {
      "DependsOn": [
        "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleDefaultPolicyD0C1A29E",
        "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleD0DD6F18",
      ],
      "Properties": {
        "CloudWatchLogsLogGroupArn": {
          "Fn::GetAtt": [
            "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
            "Arn",
          ],
        },
        "CloudWatchLogsRoleArn": {
          "Fn::GetAtt": [
            "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleD0DD6F18",
            "Arn",
          ],
        },
        "EnableLogFileValidation": true,
        "EventSelectors": [
          {
            "IncludeManagementEvents": true,
            "ReadWriteType": "All",
          },
          {
            "DataResources": [
              {
                "Type": "AWS::S3::Object",
                "Values": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":s3:::",
                      ],
                    ],
                  },
                ],
              },
            ],
          },
          {
            "DataResources": [
              {
                "Type": "AWS::Lambda::Function",
                "Values": [
                  {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda",
                      ],
                    ],
                  },
                ],
              },
            ],
          },
        ],
        "IncludeGlobalServiceEvents": true,
        "InsightSelectors": [],
        "IsLogging": true,
        "IsMultiRegionTrail": true,
        "IsOrganizationTrail": false,
        "KMSKeyId": {
          "Ref": "AcceleratorImportedCentralLogBucketKeyLookupCDD7B719",
        },
        "S3BucketName": "existing-central-log-bucket",
        "S3KeyPrefix": "cloudtrail-AWSAccelerator-Account-CloudTrail",
        "TrailName": "AWSAccelerator-CloudTrail-AWSAccelerator-Account-CloudTrail",
      },
      "Type": "AWS::CloudTrail::Trail",
    },
    "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleD0DD6F18": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudtrail.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleDefaultPolicyD0C1A29E": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleDefaultPolicyD0C1A29E",
        "Roles": [
          {
            "Ref": "AcceleratorCloudTrailAWSAcceleratorAccountCloudTrailLogsRoleD0DD6F18",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorCloudtrailEnabled08B9BEEA": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudtrail-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUD_TRAIL_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudtrailS3DataeventsEnabledF8E06B95": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudtrail-s3-dataevents-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDTRAIL_S3_DATAEVENTS_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudtrailSecurityTrailEnabledDBDDD05E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudtrail-security-trail-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDTRAIL_SECURITY_TRAIL_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudwatchAlarmActionCheckBBDDF3B7": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudwatch-alarm-action-check",
        "InputParameters": {
          "alarmActionRequired": "TRUE",
          "insufficientDataActionRequired": "TRUE",
          "okActionRequired": "FALSE",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::CloudWatch::Alarm",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDWATCH_ALARM_ACTION_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudwatchLogGroupEncrypted233263DC": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudwatch-log-group-encrypted",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCwLoggroupRetentionPeriodCheck7A9796B7": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cw-loggroup-retention-period-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorDuplicateS3RuleAFE3802F": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-duplicate-s3-rule",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorDuplicateS3RuleRemediation": {
      "DependsOn": [
        "AcceleratorDuplicateS3RuleAFE3802F",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-duplicate-s3-rule",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorDuplicateS3RuleRemediationRole22D2D45F",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "BucketName": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
          "SSEAlgorithm": {
            "StaticValue": {
              "Values": [
                "AES256",
              ],
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": "AWS-EnableS3BucketEncryption",
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorDuplicateS3RuleRemediationRole22D2D45F": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorDuplicateS3RuleRemediationRoleDefaultPolicy6664FFB9": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/AWS-EnableS3BucketEncryption",
                  ],
                ],
              },
            },
            {
              "Action": "s3:PutBucketEncryption",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorDuplicateS3RuleRemediationRoleDefaultPolicy6664FFB9",
        "Roles": [
          {
            "Ref": "AcceleratorDuplicateS3RuleRemediationRole22D2D45F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorDynamodbTableEncryptedKms3EE6CD77": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-dynamodb-table-encrypted-kms",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::DynamoDB::Table",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "DYNAMODB_TABLE_ENCRYPTED_KMS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceDetailedMonitoringEnabled9F032168": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instance-detailed-monitoring-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_INSTANCE_DETAILED_MONITORING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceNoPublicIpB8B5F3AD": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instance-no-public-ip",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_INSTANCE_NO_PUBLIC_IP",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceProfilePermission16FE7EFE": {
      "DependsOn": [
        "AcceleratorEc2InstanceProfilePermissionFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI407CB1D2",
        "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
        "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instance-profile-permission",
        "Description": "Custom role to remediate EC2 instance profile permission",
        "InputParameters": {
          "AWSManagedPolicies": "AmazonSSMManagedInstanceCore,AmazonSSMDirectoryServiceAccess,CloudWatchAgentServerPolicy",
          "ResourceId": "RESOURCE_ID",
        },
        "MaximumExecutionFrequency": "Six_Hours",
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::Role",
          ],
        },
        "Source": {
          "Owner": "CUSTOM_LAMBDA",
          "SourceDetails": [
            {
              "EventSource": "aws.config",
              "MessageType": "ConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MessageType": "OversizedConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MaximumExecutionFrequency": "Six_Hours",
              "MessageType": "ScheduledNotification",
            },
          ],
          "SourceIdentifier": {
            "Fn::GetAtt": [
              "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceProfilePermissionFunction65B8A331": {
      "DependsOn": [
        "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS Config custom rule function used for "accelerator-ec2-instance-profile-permission" rule",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 3,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorEc2InstanceProfilePermissionFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI407CB1D2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
            "Arn",
          ],
        },
        "Principal": "config.amazonaws.com",
        "SourceAccount": "111111111111",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Config custom rule needs managed readonly access policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorEc2InstanceProfilePermissionLambdaRolePolicy8942B625": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule custom lambda role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:Get*",
                "iam:List*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorEc2InstanceProfilePermissionLambdaRolePolicy8942B625",
        "Roles": [
          {
            "Ref": "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorEc2InstanceProfilePermissionLogGroupE31085F3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorEc2InstanceProfilePermissionRemediation": {
      "DependsOn": [
        "AcceleratorEc2InstanceProfilePermission16FE7EFE",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-ec2-instance-profile-permission",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AWSManagedPolicies": {
            "StaticValue": {
              "Values": [
                "AmazonSSMManagedInstanceCore",
                "AmazonSSMDirectoryServiceAccess",
                "CloudWatchAgentServerPolicy",
              ],
            },
          },
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorEc2InstanceProfilePermissionRemediationRoleDB841759",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "ResourceId": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Attach-IAM-Role-Policy",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorEc2InstanceProfilePermissionRemediationRoleDB841759": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorEc2InstanceProfilePermissionRemediationRoleDefaultPolicy9EC721D8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Attach-IAM-Role-Policy",
                  ],
                ],
              },
            },
            {
              "Action": [
                "config:BatchGetResourceConfig",
                "iam:AttachRolePolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorEc2InstanceProfilePermissionRemediationRoleDefaultPolicy9EC721D8",
        "Roles": [
          {
            "Ref": "AcceleratorEc2InstanceProfilePermissionRemediationRoleDB841759",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorEc2InstancesInVpcFCB9B1B9": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instances-in-vpc",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "INSTANCES_IN_VPC",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2VolumeInuseCheck934E830D": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-volume-inuse-check",
        "InputParameters": {
          "deleteOnTermination": "TRUE",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Volume",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_VOLUME_INUSE_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElasticacheRedisClusterAutomaticBackupCheck7CFACFC6": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elasticache-redis-cluster-automatic-backup-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElasticsearchInVpcOnly1FFB209E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elasticsearch-in-vpc-only",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELASTICSEARCH_IN_VPC_ONLY",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElasticsearchNodeToNodeEncryptionCheck7F672889": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elasticsearch-node-to-node-encryption-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::Elasticsearch::Domain",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbAcmCertificateRequired7DFF09EF": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-acm-certificate-required",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_ACM_CERTIFICATE_REQUIRED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbCrossZoneLoadBalancingEnabled4933AD2A": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-cross-zone-load-balancing-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbDeletionProtectionEnabled6A44EA2D": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-deletion-protection-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_DELETION_PROTECTION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbLoggingEnabledD68765E9": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-logging-enabled",
        "InputParameters": {
          "s3BucketNames": "existing-elb-logs-bucket-111111111111-us-east-1",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_LOGGING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbLoggingEnabledRemediation": {
      "DependsOn": [
        "AcceleratorElbLoggingEnabledD68765E9",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-elb-logging-enabled",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorElbLoggingEnabledRemediationRole852D593A",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "LoadBalancerArn": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
          "LogDestination": {
            "StaticValue": {
              "Values": [
                "existing-elb-logs-bucket-111111111111-us-east-1",
              ],
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/SSM-ELB-Enable-Logging",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorElbLoggingEnabledRemediationRole852D593A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorElbLoggingEnabledRemediationRoleDefaultPolicy31D14E3C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/SSM-ELB-Enable-Logging",
                  ],
                ],
              },
            },
            {
              "Action": [
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorElbLoggingEnabledRemediationRoleDefaultPolicy31D14E3C",
        "Roles": [
          {
            "Ref": "AcceleratorElbLoggingEnabledRemediationRole852D593A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorElbTlsHttpsListenersOnly59A28904": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-tls-https-listeners-only",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_TLS_HTTPS_LISTENERS_ONLY",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEmrKerberosEnabled27B4E237": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-emr-kerberos-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EMR_KERBEROS_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorGuarddutyNonArchivedFindings32ED20C9": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-guardduty-non-archived-findings",
        "InputParameters": {
          "daysHighSev": "1",
          "daysLowSev": "30",
          "daysMediumSev": "7",
        },
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "GUARDDUTY_NON_ARCHIVED_FINDINGS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamGroupHasUsersCheck5E15FE54": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-group-has-users-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::Group",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_GROUP_HAS_USERS_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamNoInlinePolicyCheckAE16B56C": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-no-inline-policy-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::User",
            "AWS::IAM::Role",
            "AWS::IAM::Group",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_NO_INLINE_POLICY_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamUserGroupMembershipCheck5D2DBD69": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-user-group-membership-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::User",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_USER_GROUP_MEMBERSHIP_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamUserMfaEnabled119AE0DF": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-user-mfa-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_USER_MFA_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorImportedCentralLogBucketKeyLookupCDD7B719": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-CrossAccountSsmParameterShare",
            ],
          ],
        },
        "invokingAccountID": "111111111111",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/imported-resources/logging/central-bucket/kms/arn",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorInternetGatewayAuthorizedVpcOnly75CCD662": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-internet-gateway-authorized-vpc-only",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::InternetGateway",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorKmsCmkNotScheduledForDeletionF3796D4E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-kms-cmk-not-scheduled-for-deletion",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::KMS::Key",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "KMS_CMK_NOT_SCHEDULED_FOR_DELETION",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorLambdaInsideVpc68BE0CC7": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-lambda-inside-vpc",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::Lambda::Function",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "LAMBDA_INSIDE_VPC",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorRdsLoggingEnabled02B0690C": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-rds-logging-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::RDS::DBInstance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_LOGGING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorRedshiftClusterConfigurationCheckC9D7559D": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-redshift-cluster-configuration-check",
        "InputParameters": {
          "clusterDbEncrypted": "TRUE",
          "loggingEnabled": "TRUE",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::Redshift::Cluster",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "REDSHIFT_CLUSTER_CONFIGURATION_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketDefaultLockEnabled1E1E5D5A": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-default-lock-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_DEFAULT_LOCK_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketPolicyGranteeCheckA238FAF4": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-policy-grantee-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_POLICY_GRANTEE_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketReplicationEnabled54B924AB": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-replication-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_REPLICATION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledB22E11D0": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-server-side-encryption-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledRemediation": {
      "DependsOn": [
        "AcceleratorS3BucketServerSideEncryptionEnabledB22E11D0",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-s3-bucket-server-side-encryption-enabled",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleC1D55E4D",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "BucketName": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
          "KMSMasterKey": {
            "StaticValue": {
              "Values": [
                {
                  "Ref": "SsmParameterValueacceleratorkmss3keyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              ],
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Put-S3-Encryption",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleC1D55E4D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleDefaultPolicy8B79DC01": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Put-S3-Encryption",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetEncryptionConfiguration",
                "s3:PutEncryptionConfiguration",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalArn": [
                    "arn:aws:iam::*:role/AWSAccelerator-SecuritySt-*",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleDefaultPolicy8B79DC01",
        "Roles": [
          {
            "Ref": "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleC1D55E4D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorS3BucketVersioningEnabledA2D78DD3": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-versioning-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_VERSIONING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorSagemakerEndpointConfigurationKmsKeyConfigured29A26847": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-sagemaker-endpoint-configuration-kms-key-configured",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorSagemakerNotebookInstanceKmsKeyConfigured98505444": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-sagemaker-notebook-instance-kms-key-configured",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorSecurityhubEnabled25B1DE1B": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-securityhub-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "SECURITYHUB_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorTargetDocument01F99B0122": {
      "DependsOn": [
        "AcceleratorTargetDocument01FunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI866B82A5",
        "AcceleratorTargetDocument01Function89A6815D",
        "AcceleratorTargetDocument01FunctionServiceRoleCDB753E0",
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-target-document-01",
        "Description": "Custom rule for testing target document remediation",
        "InputParameters": {},
        "MaximumExecutionFrequency": "Six_Hours",
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "CUSTOM_LAMBDA",
          "SourceDetails": [
            {
              "EventSource": "aws.config",
              "MessageType": "ConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MessageType": "OversizedConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MaximumExecutionFrequency": "Six_Hours",
              "MessageType": "ScheduledNotification",
            },
          ],
          "SourceIdentifier": {
            "Fn::GetAtt": [
              "AcceleratorTargetDocument01Function89A6815D",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorTargetDocument01Function89A6815D": {
      "DependsOn": [
        "AcceleratorTargetDocument01FunctionServiceRoleCDB753E0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS Config custom rule function used for "accelerator-target-document-01" rule",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorTargetDocument01FunctionServiceRoleCDB753E0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 3,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorTargetDocument01FunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI866B82A5": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceleratorTargetDocument01Function89A6815D",
            "Arn",
          ],
        },
        "Principal": "config.amazonaws.com",
        "SourceAccount": "111111111111",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AcceleratorTargetDocument01FunctionServiceRoleCDB753E0": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Config custom rule needs managed readonly access policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorTargetDocument01LambdaRolePolicy72C0AA10": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule custom lambda role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:Describe*",
                "ec2:Get*",
                "ec2:ListSnapshotsInRecycleBin",
                "ec2:SearchLocalGatewayRoutes",
                "ec2:SearchTransitGatewayRoutes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorTargetDocument01LambdaRolePolicy72C0AA10",
        "Roles": [
          {
            "Ref": "AcceleratorTargetDocument01FunctionServiceRoleCDB753E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorTargetDocument01LogGroup196D5782": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorTargetDocument01Function89A6815D",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorTargetDocument01Remediation": {
      "DependsOn": [
        "AcceleratorTargetDocument01F99B0122",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-target-document-01",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorTargetDocument01RemediationRoleB6FD3A5D",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "IamInstanceProfile": {
            "StaticValue": {
              "Values": [
                "EC2-Default-SSM-AD-Role",
              ],
            },
          },
          "InstanceId": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Attach-IAM-Instance-Profile",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorTargetDocument01RemediationFunction15F7D4F0": {
      "DependsOn": [
        "AcceleratorTargetDocument01RemediationRoleDefaultPolicyD5AA3685",
        "AcceleratorTargetDocument01RemediationRoleB6FD3A5D",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Function used in Attach-IAM-Instance-Profile SSM document for "accelerator-target-document-01" custom config rule to remediation",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorTargetDocument01RemediationRoleB6FD3A5D",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorTargetDocument01RemediationLogGroupDCA10183": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorTargetDocument01RemediationFunction15F7D4F0",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorTargetDocument01RemediationRoleB6FD3A5D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorTargetDocument01RemediationRoleDefaultPolicyD5AA3685": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Attach-IAM-Instance-Profile",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ec2:AssociateIamInstanceProfile",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "iam:PassRole",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorTargetDocument01RemediationRoleDefaultPolicyD5AA3685",
        "Roles": [
          {
            "Ref": "AcceleratorTargetDocument01RemediationRoleB6FD3A5D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorTargetDocument01tagsFBAE2056": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomConfigServiceTagsCustomResourceProviderLogGroupF7260892",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomConfigServiceTagsCustomResourceProviderHandler159E7D96",
            "Arn",
          ],
        },
        "resourceArn": {
          "Fn::GetAtt": [
            "AcceleratorTargetDocument01F99B0122",
            "Arn",
          ],
        },
        "tags": [
          {
            "Key": "key",
            "Value": "value",
          },
        ],
      },
      "Type": "Custom::ConfigServiceTags",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorVpcSgOpenOnlyToAuthorizedPorts9EF29973": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-vpc-sg-open-only-to-authorized-ports",
        "InputParameters": {
          "authorizedTcpPorts": "443",
          "authorizedUdpPorts": "1020-1025",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::SecurityGroup",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorVpcVpn2TunnelsUpBED0249E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-vpc-vpn-2-tunnels-up",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::VPNConnection",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "VPC_VPN_2_TUNNELS_UP",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorWafLoggingEnabledC2F2415E": {
      "DependsOn": [
        "AcceleratorWafLoggingEnabledFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI742BC256",
        "AcceleratorWafLoggingEnabledFunctionE69C34AD",
        "AcceleratorWafLoggingEnabledFunctionServiceRole3388E650",
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-waf-logging-enabled",
        "Description": "Custom rule for checking WAF logging enabled",
        "InputParameters": {},
        "MaximumExecutionFrequency": "Six_Hours",
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::WAF::WebACL",
            "AWS::WAFRegional::WebACL",
            "AWS::WAFv2::WebACL",
          ],
        },
        "Source": {
          "Owner": "CUSTOM_LAMBDA",
          "SourceDetails": [
            {
              "EventSource": "aws.config",
              "MessageType": "ConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MessageType": "OversizedConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MaximumExecutionFrequency": "Six_Hours",
              "MessageType": "ScheduledNotification",
            },
          ],
          "SourceIdentifier": {
            "Fn::GetAtt": [
              "AcceleratorWafLoggingEnabledFunctionE69C34AD",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorWafLoggingEnabledFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI742BC256": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceleratorWafLoggingEnabledFunctionE69C34AD",
            "Arn",
          ],
        },
        "Principal": "config.amazonaws.com",
        "SourceAccount": "111111111111",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AcceleratorWafLoggingEnabledFunctionE69C34AD": {
      "DependsOn": [
        "AcceleratorWafLoggingEnabledFunctionServiceRole3388E650",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS Config custom rule function used for "accelerator-waf-logging-enabled" rule",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorWafLoggingEnabledFunctionServiceRole3388E650",
            "Arn",
          ],
        },
        "Runtime": "python3.12",
        "Timeout": 3,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorWafLoggingEnabledFunctionServiceRole3388E650": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Config custom rule needs managed readonly access policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorWafLoggingEnabledLambdaRolePolicy8D9C985E": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule custom lambda role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "waf:GetLoggingConfiguration",
                "waf:GetWebACL",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetWebACL",
                "waf-regional:GetLoggingConfiguration",
                "waf-regional:GetWebACL",
              ],
              "Effect": "Allow",
              "Resource": [
                "arn:*:waf::*:*",
                "arn:*:wafv2:*:*:*/*/*",
                "arn:*:waf-regional:*:*:*",
              ],
              "Sid": "wafconfig",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorWafLoggingEnabledLambdaRolePolicy8D9C985E",
        "Roles": [
          {
            "Ref": "AcceleratorWafLoggingEnabledFunctionServiceRole3388E650",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorWafLoggingEnabledLogGroupBE48D40E": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorWafLoggingEnabledFunctionE69C34AD",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorWafLoggingEnabledRemediation": {
      "DependsOn": [
        "AcceleratorWafLoggingEnabledC2F2415E",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-waf-logging-enabled",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorWafLoggingEnabledRemediationRole4997DFE0",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "WebACLId": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/WAF-Enable-Logging",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorWafLoggingEnabledRemediationRole4997DFE0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorWafLoggingEnabledRemediationRoleDefaultPolicyA51DB6A8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/WAF-Enable-Logging",
                  ],
                ],
              },
            },
            {
              "Action": [
                "waf:PutLoggingConfiguration",
                "waf:GetLoggingConfiguration",
                "waf:GetWebACL",
                "wafv2:PutLoggingConfiguration",
                "wafv2:GetLoggingConfiguration",
                "wafv2:GetWebACL",
                "waf-regional:PutLoggingConfiguration",
                "waf-regional:GetLoggingConfiguration",
                "waf-regional:GetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "wafconfig",
            },
            {
              "Action": "logs:*",
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "logs",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorWafLoggingEnabledRemediationRoleDefaultPolicyA51DB6A8",
        "Roles": [
          {
            "Ref": "AcceleratorWafLoggingEnabledRemediationRole4997DFE0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AppTest2CustomCreateLogGroupCustomResourceProviderHandler03798759": {
      "DependsOn": [
        "AppTest2CustomCreateLogGroupCustomResourceProviderRole24FD6060",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "AppTest2CustomCreateLogGroupCustomResourceProviderRole24FD6060",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AppTest2CustomCreateLogGroupCustomResourceProviderLogGroup7FB49646": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AppTest2CustomCreateLogGroupCustomResourceProviderHandler03798759",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AppTest2CustomCreateLogGroupCustomResourceProviderRole24FD6060": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:DeleteLogGroup",
                    "logs:PutRetentionPolicy",
                  ],
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:us-east-1:111111111111:log-group:/App/Test2:*",
                      ],
                    ],
                  },
                },
                {
                  "Action": [
                    "kms:DescribeKey",
                    "kms:ListKeys",
                    "logs:AssociateKmsKey",
                    "logs:DescribeLogGroups",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AppTest2LogGroupCloudWatchLogsResource910CB0B1": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "AppTest2CustomCreateLogGroupCustomResourceProviderLogGroup7FB49646",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AppTest2CustomCreateLogGroupCustomResourceProviderHandler03798759",
            "Arn",
          ],
        },
        "keyArn": "arn:aws:kms:us-east-1:111111111111:key/121ac3b6-8d53-4d8a-a05c-1234567789",
        "logGroupName": "/App/Test2",
        "retention": 180,
        "terminationProtected": false,
      },
      "Type": "Custom::CreateLogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AwsConfigChangesMetricFilter019CEB27": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventSource=config.amazonaws.com) && (($.eventName=StopConfigurationRecorder) || ($.eventName=DeleteDeliveryChannel) || ($.eventName=PutDeliveryChannel) || ($.eventName=PutConfigurationRecorder))}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "AWSConfigChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "Cis11RootAccountUsage27B8A444": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for usage of "root" account",
        "AlarmName": "CIS-1.1-RootAccountUsage",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "RootAccountUsage",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis310SecurityGroupChanges08E807D3": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for security group changes",
        "AlarmName": "CIS-3.10-SecurityGroupChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "SecurityGroupChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis311NetworkAclChanges9CF1F1AD": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for changes to Network Access Control Lists (NACL)",
        "AlarmName": "CIS-3.11-NetworkACLChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "NetworkACLChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis312NetworkGatewayChanges1C63367E": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for changes to network gateways",
        "AlarmName": "CIS-3.12-NetworkGatewayChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "NetworkGatewayChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis313RouteTableChanges2799DB8E": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for route table changes",
        "AlarmName": "CIS-3.13-RouteTableChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "RouteTableChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis314VpcChanges4516C762": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for VPC changes",
        "AlarmName": "CIS-3.14-VPCChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "VPCChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis31UnauthorizedApiCallsB850B3C7": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for unauthorized API calls",
        "AlarmName": "CIS-3.1-UnauthorizedAPICalls",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "UnauthorizedAPICalls",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis32ConsoleSigninWithoutMfa8401FEDF": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for AWS Management Console sign-in without MFA",
        "AlarmName": "CIS-3.2-ConsoleSigninWithoutMFA",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ConsoleSigninWithoutMFA",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis33RootAccountUsage51A91DE1": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for usage of "root" account",
        "AlarmName": "CIS-3.3-RootAccountUsage",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "RootAccountUsage",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis34IamPolicyChangesDD227791": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for IAM policy changes",
        "AlarmName": "CIS-3.4-IAMPolicyChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "IAMPolicyChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis35CloudTrailChanges5766286B": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for CloudTrail configuration changes",
        "AlarmName": "CIS-3.5-CloudTrailChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "CloudTrailChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis36ConsoleAuthenticationFailure01D5FCD6": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm exist for AWS Management Console authentication failures",
        "AlarmName": "CIS-3.6-ConsoleAuthenticationFailure",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ConsoleAuthenticationFailure",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis37DisableOrDeleteCmkA4096819": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for disabling or scheduled deletion of customer created CMKs",
        "AlarmName": "CIS-3.7-DisableOrDeleteCMK",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "DisableOrDeleteCMK",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis38S3BucketPolicyChangesBCAEEBF2": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for S3 bucket policy changes",
        "AlarmName": "CIS-3.8-S3BucketPolicyChanges.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "S3BucketPolicyChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis39AwsConfigChangesD1108027": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for AWS Config configuration changes",
        "AlarmName": "CIS-3.9-AWSConfigChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "AWSConfigChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CloudTrailChangesMetricFilter25ABB504": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=CreateTrail) || ($.eventName=UpdateTrail) || ($.eventName=DeleteTrail) || ($.eventName=StartLogging) || ($.eventName=StopLogging)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "CloudTrailChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ConfigDeliveryChannel": {
      "Properties": {
        "ConfigSnapshotDeliveryProperties": {
          "DeliveryFrequency": "One_Hour",
        },
        "S3BucketName": "existing-central-log-bucket",
      },
      "Type": "AWS::Config::DeliveryChannel",
    },
    "ConfigRecorder": {
      "Properties": {
        "RecordingGroup": {
          "AllSupported": true,
          "IncludeGlobalResourceTypes": true,
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "ConfigRecorderRoleC4E33AA3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Config::ConfigurationRecorder",
    },
    "ConfigRecorderRoleC4E33AA3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "ConfigRecorderRole needs managed policy service-role/AWS_ConfigRole to administer config rules",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "ConfigRecorderRole DefaultPolicy is built by cdk.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWS_ConfigRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ConfigRecorderRoleDefaultPolicyB8261303": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Single bucket",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Condition": {
                "StringLike": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
              "Sid": "S3WriteAccess",
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::aws-accelerator-central-logs-333333333333-us-west-2",
              "Sid": "S3GetAclAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ConfigRecorderRoleDefaultPolicyB8261303",
        "Roles": [
          {
            "Ref": "ConfigRecorderRoleC4E33AA3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ConsoleAuthenticationFailureMetricFilter0F833CC2": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=ConsoleLogin) && ($.errorMessage="Failed authentication")}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "ConsoleAuthenticationFailure",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "ConsoleSigninWithoutMfaMetricFilter85B015F7": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") && ($.userIdentity.type = "IAMUser") && ($.responseElements.ConsoleLogin = "Success")}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "ConsoleSigninWithoutMFA",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "CustomConfigServiceTagsCustomResourceProviderHandler159E7D96": {
      "DependsOn": [
        "CustomConfigServiceTagsCustomResourceProviderRoleDC1C2A56",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomConfigServiceTagsCustomResourceProviderRoleDC1C2A56",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomConfigServiceTagsCustomResourceProviderLogGroupF7260892": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomConfigServiceTagsCustomResourceProviderHandler159E7D96",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomConfigServiceTagsCustomResourceProviderRoleDC1C2A56": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "config:TagResource",
                    "config:UntagResource",
                  ],
                  "Effect": "Allow",
                  "Resource": "arn:aws:config:*:111111111111:config-rule/*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSessionManagerLoggingCustomResourceProviderHandler4FE51699": {
      "DependsOn": [
        "CustomSessionManagerLoggingCustomResourceProviderRole1D8EE686",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSessionManagerLoggingCustomResourceProviderRole1D8EE686",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSessionManagerLoggingCustomResourceProviderLogGroupF4E32979": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSessionManagerLoggingCustomResourceProviderHandler4FE51699",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSessionManagerLoggingCustomResourceProviderRole1D8EE686": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DescribeDocument",
                    "ssm:CreateDocument",
                    "ssm:UpdateDocument",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DisableOrDeleteCmkMetricFilter4217496A": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventSource=kms.amazonaws.com) && (($.eventName=DisableKey) || ($.eventName=ScheduleKeyDeletion))}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "DisableOrDeleteCMK",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricFilterGreaterThanThresholdF3747C30": {
      "Properties": {
        "FilterPattern": "{$.eventType !="AwsServiceEvent"}",
        "LogGroupName": "/generic/log/group",
        "MetricTransformations": [
          {
            "MetricName": "GenericMetricForTestingGreaterThanThreshold",
            "MetricNamespace": "LzaMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricFilterGreaterThanUpperThreshold6D5F12B4": {
      "Properties": {
        "FilterPattern": "{$.eventType !="AwsServiceEvent"}",
        "LogGroupName": "/generic/log/group",
        "MetricTransformations": [
          {
            "MetricName": "GenericMetricForTestingGreaterThanUpperThreshold",
            "MetricNamespace": "LzaMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricFilterLessThanLowerOrGreaterThanUpperThreshold959D3A93": {
      "Properties": {
        "FilterPattern": "{$.eventType !="AwsServiceEvent"}",
        "LogGroupName": "/generic/log/group",
        "MetricTransformations": [
          {
            "MetricName": "GenericMetricForTestingLessThanLowerOrGreaterThanUpperThreshold",
            "MetricNamespace": "LzaMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricFilterLessThanLowerThreshold9B1BB0AF": {
      "Properties": {
        "FilterPattern": "{$.eventType !="AwsServiceEvent"}",
        "LogGroupName": "/generic/log/group",
        "MetricTransformations": [
          {
            "MetricName": "GenericMetricForTestingLessThanLowerThreshold",
            "MetricNamespace": "LzaMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricFilterLessThanOrEqualToThreshold9E926CBD": {
      "Properties": {
        "FilterPattern": "{$.eventType !="AwsServiceEvent"}",
        "LogGroupName": "/generic/log/group",
        "MetricTransformations": [
          {
            "MetricName": "GenericMetricForTestingLessThanOrEqualToThreshold",
            "MetricNamespace": "LzaMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricFilterLessThanThreshold8E8F66A6": {
      "Properties": {
        "FilterPattern": "{$.eventType !="AwsServiceEvent"}",
        "LogGroupName": "/generic/log/group",
        "MetricTransformations": [
          {
            "MetricName": "GenericMetricForTestingLessThanThreshold",
            "MetricNamespace": "LzaMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "GenericMetricGreaterThanThresholdDCFEEABB": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm to test GenericMetric GreaterThanThreshold",
        "AlarmName": "GenericMetricGreaterThanThreshold",
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GenericMetricForTestingGreaterThanThreshold",
        "Namespace": "LzaMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "ignore",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "GenericMetricGreaterThanUpperThreshold72E3337B": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm to test GenericMetric GreaterThanUpperThreshold",
        "AlarmName": "GenericMetricGreaterThanUpperThreshold",
        "ComparisonOperator": "GreaterThanUpperThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GenericMetricForTestingGreaterThanUpperThreshold",
        "Namespace": "LzaMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "GenericMetricLessThanLowerOrGreaterThanUpperThresholdAB2E321F": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm to test GenericMetric LessThanLowerOrGreaterThanUpperThreshold",
        "AlarmName": "GenericMetricLessThanLowerOrGreaterThanUpperThreshold",
        "ComparisonOperator": "LessThanLowerOrGreaterThanUpperThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GenericMetricForTestingLessThanLowerOrGreaterThanUpperThreshold",
        "Namespace": "LzaMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "GenericMetricLessThanLowerThresholdC7D23608": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm to test GenericMetric LessThanLowerThreshold",
        "AlarmName": "GenericMetricLessThanLowerThreshold",
        "ComparisonOperator": "LessThanLowerThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GenericMetricForTestingLessThanLowerThreshold",
        "Namespace": "LzaMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "GenericMetricLessThanOrEqualToThreshold76C1BA2A": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm to test GenericMetric LessThanOrEqualToThreshold",
        "AlarmName": "GenericMetricLessThanOrEqualToThreshold",
        "ComparisonOperator": "LessThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GenericMetricForTestingLessThanOrEqualToThreshold",
        "Namespace": "LzaMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "GenericMetricLessThanThreshold69CF30D8": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm to test GenericMetric LessThanThreshold",
        "AlarmName": "GenericMetricLessThanThreshold",
        "ComparisonOperator": "LessThanThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "GenericMetricForTestingLessThanThreshold",
        "Namespace": "LzaMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "missing",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "IamPolicyChangesMetricFilter29A943B3": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=DeleteGroupPolicy) || ($.eventName=DeleteRolePolicy) || ($.eventName=DeleteUserPolicy) || ($.eventName=PutGroupPolicy) || ($.eventName=PutRolePolicy) || ($.eventName=PutUserPolicy) || ($.eventName=CreatePolicy) || ($.eventName=DeletePolicy) || ($.eventName=CreatePolicyVersion) || ($.eventName=DeletePolicyVersion) || ($.eventName=AttachRolePolicy) || ($.eventName=DetachRolePolicy) || ($.eventName=AttachUserPolicy) || ($.eventName=DetachUserPolicy) || ($.eventName=AttachGroupPolicy) || ($.eventName=DetachGroupPolicy)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "IAMPolicyChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "MetricFilter1B93B6E5": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "RootAccountUsage",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "NetworkAclChangesMetricFilter87734AD0": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=CreateNetworkAcl) || ($.eventName=CreateNetworkAclEntry) || ($.eventName=DeleteNetworkAcl) || ($.eventName=DeleteNetworkAclEntry) || ($.eventName=ReplaceNetworkAclEntry) || ($.eventName=ReplaceNetworkAclAssociation)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "NetworkACLChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "NetworkGatewayChangesMetricFilterB8EAA32B": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=CreateCustomerGateway) || ($.eventName=DeleteCustomerGateway) || ($.eventName=AttachInternetGateway) || ($.eventName=CreateInternetGateway) || ($.eventName=DeleteInternetGateway) || ($.eventName=DetachInternetGateway)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "NetworkGatewayChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "RootAccountMetricFilter2CA28475": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "RootAccount",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "RouteTableChangesMetricFilter5DC8694A": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=CreateRoute) || ($.eventName=CreateRouteTable) || ($.eventName=ReplaceRoute) || ($.eventName=ReplaceRouteTableAssociation) || ($.eventName=DeleteRouteTable) || ($.eventName=DeleteRoute) || ($.eventName=DisassociateRouteTable)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "RouteTableChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "S3BucketPolicyChangesMetricFilter2247C8C8": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventSource=s3.amazonaws.com) && (($.eventName=PutBucketAcl) || ($.eventName=PutBucketPolicy) || ($.eventName=PutBucketCors) || ($.eventName=PutBucketLifecycle) || ($.eventName=PutBucketReplication) || ($.eventName=DeleteBucketPolicy) || ($.eventName=DeleteBucketCors) || ($.eventName=DeleteBucketLifecycle) || ($.eventName=DeleteBucketReplication))}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "S3BucketPolicyChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "SecurityGroupChangesMetricFilterE0B65A44": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=AuthorizeSecurityGroupIngress) || ($.eventName=AuthorizeSecurityGroupEgress) || ($.eventName=RevokeSecurityGroupIngress) || ($.eventName=RevokeSecurityGroupEgress) || ($.eventName=CreateSecurityGroup) || ($.eventName=DeleteSecurityGroup)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "SecurityGroupChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5": {
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C",
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Creates a CloudWatch Logs Group to store SecurityHub findings and updates CW Log Group resource policy",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Ref": "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionResourceLogGroupB7A99902": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionSecurityHubEventsFunctionResourceF6D56745": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunctionResourceLogGroupB7A99902",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEvent1729ADC9",
            "Arn",
          ],
        },
        "logGroupArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":logs:us-east-1:111111111111:log-group:/*:*",
            ],
          ],
        },
        "logGroupName": "/AWSAccelerator-SecurityHub",
        "uuid": "REPLACED-UUID",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Lambda needs Managed policy.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Lambda needs Managed policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:us-east-1:111111111111:log-group:/AWSAccelerator-SecurityHub*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:DescribeLogGroups",
                "logs:PutResourcePolicy",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:us-east-1:111111111111:log-group:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C",
        "Roles": [
          {
            "Ref": "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEvent1729ADC9": {
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-SecurityResourcesStack-111111111111-us-east-1/SecurityHubEventsLog/SecurityHubEventsFunction/Resource)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Custom resource provider framework-role created by cdk.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85",
        "Roles": [
          {
            "Ref": "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SecurityHubEventsLogSecurityHubLogEventsRule9AC6959D": {
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C",
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
        "SecurityHubEventsLogSecurityHubEventsFunctionResourceLogGroupB7A99902",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEvent1729ADC9",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
        "SecurityHubEventsLogSecurityHubEventsFunctionSecurityHubEventsFunctionResourceF6D56745",
      ],
      "Properties": {
        "Description": "Sends Security Hub Findings above threshold to CloudWatch Logs",
        "EventPattern": {
          "detail": {
            "findings": {
              "Severity": {
                "Label": [
                  "CRITICAL",
                  "HIGH",
                  "MEDIUM",
                ],
              },
            },
          },
          "detail-type": [
            "Security Hub Findings - Imported",
          ],
          "source": [
            "aws.securityhub",
          ],
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":logs:us-east-1:111111111111:log-group:/AWSAccelerator-SecurityHub:*",
                ],
              ],
            },
            "Id": "CloudWatchLogTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SecurityHubEventsLogSecurityHubSnsEventsRule3900A9EA": {
      "Properties": {
        "Description": "Sends Security Hub Findings above threshold to SNS",
        "EventPattern": {
          "detail": {
            "findings": {
              "Severity": {
                "Label": [
                  "CRITICAL",
                  "HIGH",
                ],
              },
            },
          },
          "detail-type": [
            "Security Hub Findings - Imported",
          ],
          "source": [
            "aws.securityhub",
          ],
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":sns:us-east-1:111111111111:aws-accelerator-Security",
                ],
              ],
            },
            "Id": "SnsTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-SecurityResourcesStack-111111111111-us-east-1/version",
        "Type": "String",
        "Value": "1.9.2",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-SecurityResourcesStack-111111111111-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmSessionManagerSettings24721AC9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSessionManagerLoggingCustomResourceProviderLogGroupF4E32979",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSessionManagerLoggingCustomResourceProviderHandler4FE51699",
            "Arn",
          ],
        },
        "cloudWatchEncryptionEnabled": false,
        "cloudWatchLogGroupName": "",
        "kmsKeyId": {
          "Ref": "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C",
        },
        "s3BucketName": "existing-central-log-bucket",
        "s3EncryptionEnabled": true,
        "s3KeyPrefix": {
          "Fn::Join": [
            "",
            [
              "session/",
              {
                "Ref": "AWS::AccountId",
              },
              "/us-east-1",
            ],
          ],
        },
      },
      "Type": "Custom::SsmSessionManagerSettings",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator Session Manager Session Encryption",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "SsmSessionManagerSettingsSessionManagerSessionKeyAlias59E0224E": {
      "Properties": {
        "AliasName": "alias/accelerator/sessionmanager-logs/session",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "SsmSessionManagerSettingsSessionManagerUserKMSPolicyFB96BB42": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "AWSAccelerator-SessionManagerUserKMS-us-east-1",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "UnauthorizedApiCallsMetricFilter95DF459D": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "UnauthorizedAPICalls",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "VpcChangesMetricFilter309EC3DF": {
      "DependsOn": [
        "CloudTrailLogGroupAWSAcceleratorAccountCloudTrail9F5C56EA",
      ],
      "Properties": {
        "FilterPattern": "{($.eventName=CreateVpc) || ($.eventName=DeleteVpc) || ($.eventName=ModifyVpcAttribute) || ($.eventName=AcceptVpcPeeringConnection) || ($.eventName=CreateVpcPeeringConnection) || ($.eventName=DeleteVpcPeeringConnection) || ($.eventName=RejectVpcPeeringConnection) || ($.eventName=AttachClassicLinkVpc) || ($.eventName=DetachClassicLinkVpc) || ($.eventName=DisableVpcClassicLink) || ($.eventName=EnableVpcClassicLink)}",
        "LogGroupName": "aws-accelerator-cloudtrail-AWSAccelerator-Account-CloudTrail",
        "MetricTransformations": [
          {
            "MetricName": "VPCChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
  },
}
`;

exports[`delegatedAdminStack Construct(SecurityResourcesStack):  Snapshot Test 1`] = `
{
  "Parameters": {
    "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/cloudwatch/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/lambda/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmss3keyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/s3/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "SsmParameterValueacceleratorkmssnstopickeyarnC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Default": "/accelerator/kms/snstopic/key-arn",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "AcceleratorAlbHttpDropInvalidHeaderEnabled699B715A": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-alb-http-drop-invalid-header-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ALB_HTTP_DROP_INVALID_HEADER_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorApiGwCacheEnabledAndEncrypted090286F1": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-api-gw-cache-enabled-and-encrypted",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ApiGateway::Stage",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "API_GW_CACHE_ENABLED_AND_ENCRYPTED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorApiGwExecutionLoggingEnabledDA00B249": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-api-gw-execution-logging-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ApiGateway::Stage",
            "AWS::ApiGatewayV2::Stage",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "API_GW_EXECUTION_LOGGING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorAttachEc2InstanceProfile1DAEB489": {
      "DependsOn": [
        "AcceleratorAttachEc2InstanceProfileFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI5AF7FE49",
        "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
        "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-attach-ec2-instance-profile",
        "Description": "Custom rule for checking EC2 instance IAM profile attachment",
        "InputParameters": {},
        "MaximumExecutionFrequency": "Six_Hours",
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "CUSTOM_LAMBDA",
          "SourceDetails": [
            {
              "EventSource": "aws.config",
              "MessageType": "ConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MessageType": "OversizedConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MaximumExecutionFrequency": "Six_Hours",
              "MessageType": "ScheduledNotification",
            },
          ],
          "SourceIdentifier": {
            "Fn::GetAtt": [
              "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorAttachEc2InstanceProfileFunction2F25082F": {
      "DependsOn": [
        "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS Config custom rule function used for "accelerator-attach-ec2-instance-profile" rule",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 3,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorAttachEc2InstanceProfileFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI5AF7FE49": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
            "Arn",
          ],
        },
        "Principal": "config.amazonaws.com",
        "SourceAccount": "111111111111",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Config custom rule needs managed readonly access policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorAttachEc2InstanceProfileLambdaRolePolicy9BC7815F": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule custom lambda role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:Describe*",
                "ec2:Get*",
                "ec2:ListSnapshotsInRecycleBin",
                "ec2:SearchLocalGatewayRoutes",
                "ec2:SearchTransitGatewayRoutes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorAttachEc2InstanceProfileLambdaRolePolicy9BC7815F",
        "Roles": [
          {
            "Ref": "AcceleratorAttachEc2InstanceProfileFunctionServiceRoleF2BC24EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorAttachEc2InstanceProfileLogGroup19DCB538": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorAttachEc2InstanceProfileFunction2F25082F",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorAttachEc2InstanceProfileRemediation": {
      "DependsOn": [
        "AcceleratorAttachEc2InstanceProfile1DAEB489",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-attach-ec2-instance-profile",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorAttachEc2InstanceProfileRemediationRole0804271B",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "IamInstanceProfile": {
            "StaticValue": {
              "Values": [
                "EC2-Default-SSM-AD-Role",
              ],
            },
          },
          "InstanceId": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Attach-IAM-Instance-Profile",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorAttachEc2InstanceProfileRemediationRole0804271B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorAttachEc2InstanceProfileRemediationRoleDefaultPolicy820C0688": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Attach-IAM-Instance-Profile",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ec2:AssociateIamInstanceProfile",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "iam:PassRole",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorAttachEc2InstanceProfileRemediationRoleDefaultPolicy820C0688",
        "Roles": [
          {
            "Ref": "AcceleratorAttachEc2InstanceProfileRemediationRole0804271B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorCentralLogBucketKeyLookup26F8C418": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
            "Arn",
          ],
        },
        "assumeRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::333333333333:role/AWSAccelerator-us-west-2-CentralBucket-KeyArnParam-Role",
            ],
          ],
        },
        "invokingAccountID": "111111111111",
        "invokingRegion": "us-east-1",
        "parameterAccountID": "333333333333",
        "parameterName": "/accelerator/logging/central-bucket/kms/arn",
        "parameterRegion": "us-west-2",
        "uuid": "REPLACED-UUID",
      },
      "Type": "Custom::SsmGetParameterValue",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorCloudtrailEnabled08B9BEEA": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudtrail-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUD_TRAIL_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudtrailS3DataeventsEnabledF8E06B95": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudtrail-s3-dataevents-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDTRAIL_S3_DATAEVENTS_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudtrailSecurityTrailEnabledDBDDD05E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudtrail-security-trail-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDTRAIL_SECURITY_TRAIL_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudwatchAlarmActionCheckBBDDF3B7": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudwatch-alarm-action-check",
        "InputParameters": {
          "alarmActionRequired": "TRUE",
          "insufficientDataActionRequired": "TRUE",
          "okActionRequired": "FALSE",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::CloudWatch::Alarm",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDWATCH_ALARM_ACTION_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCloudwatchLogGroupEncrypted233263DC": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cloudwatch-log-group-encrypted",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CLOUDWATCH_LOG_GROUP_ENCRYPTED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorCwLoggroupRetentionPeriodCheck7A9796B7": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-cw-loggroup-retention-period-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "CW_LOGGROUP_RETENTION_PERIOD_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorDynamodbTableEncryptedKms3EE6CD77": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-dynamodb-table-encrypted-kms",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::DynamoDB::Table",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "DYNAMODB_TABLE_ENCRYPTED_KMS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceDetailedMonitoringEnabled9F032168": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instance-detailed-monitoring-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_INSTANCE_DETAILED_MONITORING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceNoPublicIpB8B5F3AD": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instance-no-public-ip",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_INSTANCE_NO_PUBLIC_IP",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceProfilePermission16FE7EFE": {
      "DependsOn": [
        "AcceleratorEc2InstanceProfilePermissionFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI407CB1D2",
        "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
        "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instance-profile-permission",
        "Description": "Custom role to remediate EC2 instance profile permission",
        "InputParameters": {
          "AWSManagedPolicies": "AmazonSSMManagedInstanceCore,AmazonSSMDirectoryServiceAccess,CloudWatchAgentServerPolicy",
          "ResourceId": "RESOURCE_ID",
        },
        "MaximumExecutionFrequency": "Six_Hours",
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::Role",
          ],
        },
        "Source": {
          "Owner": "CUSTOM_LAMBDA",
          "SourceDetails": [
            {
              "EventSource": "aws.config",
              "MessageType": "ConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MessageType": "OversizedConfigurationItemChangeNotification",
            },
            {
              "EventSource": "aws.config",
              "MaximumExecutionFrequency": "Six_Hours",
              "MessageType": "ScheduledNotification",
            },
          ],
          "SourceIdentifier": {
            "Fn::GetAtt": [
              "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2InstanceProfilePermissionFunction65B8A331": {
      "DependsOn": [
        "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS Config custom rule function used for "accelerator-ec2-instance-profile-permission" rule",
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 3,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AcceleratorEc2InstanceProfilePermissionFunctionCustomRulePermissionBjrlLxHBU2q1eflzaT436qiq4Iu5pKu7iRO6toNI407CB1D2": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
            "Arn",
          ],
        },
        "Principal": "config.amazonaws.com",
        "SourceAccount": "111111111111",
      },
      "Type": "AWS::Lambda::Permission",
    },
    "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Config custom rule needs managed readonly access policy",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSConfigRulesExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorEc2InstanceProfilePermissionLambdaRolePolicy8942B625": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule custom lambda role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "iam:Get*",
                "iam:List*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorEc2InstanceProfilePermissionLambdaRolePolicy8942B625",
        "Roles": [
          {
            "Ref": "AcceleratorEc2InstanceProfilePermissionFunctionServiceRoleAA6A6427",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorEc2InstanceProfilePermissionLogGroupE31085F3": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AcceleratorEc2InstanceProfilePermissionFunction65B8A331",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AcceleratorEc2InstanceProfilePermissionRemediation": {
      "DependsOn": [
        "AcceleratorEc2InstanceProfilePermission16FE7EFE",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-ec2-instance-profile-permission",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AWSManagedPolicies": {
            "StaticValue": {
              "Values": [
                "AmazonSSMManagedInstanceCore",
                "AmazonSSMDirectoryServiceAccess",
                "CloudWatchAgentServerPolicy",
              ],
            },
          },
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorEc2InstanceProfilePermissionRemediationRoleDB841759",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "ResourceId": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Attach-IAM-Role-Policy",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorEc2InstanceProfilePermissionRemediationRoleDB841759": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorEc2InstanceProfilePermissionRemediationRoleDefaultPolicy9EC721D8": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Attach-IAM-Role-Policy",
                  ],
                ],
              },
            },
            {
              "Action": [
                "config:BatchGetResourceConfig",
                "iam:AttachRolePolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorEc2InstanceProfilePermissionRemediationRoleDefaultPolicy9EC721D8",
        "Roles": [
          {
            "Ref": "AcceleratorEc2InstanceProfilePermissionRemediationRoleDB841759",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorEc2InstancesInVpcFCB9B1B9": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-instances-in-vpc",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Instance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "INSTANCES_IN_VPC",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEc2VolumeInuseCheck934E830D": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-ec2-volume-inuse-check",
        "InputParameters": {
          "deleteOnTermination": "TRUE",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::Volume",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EC2_VOLUME_INUSE_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElasticacheRedisClusterAutomaticBackupCheck7CFACFC6": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elasticache-redis-cluster-automatic-backup-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElasticsearchInVpcOnly1FFB209E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elasticsearch-in-vpc-only",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELASTICSEARCH_IN_VPC_ONLY",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElasticsearchNodeToNodeEncryptionCheck7F672889": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elasticsearch-node-to-node-encryption-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::Elasticsearch::Domain",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbAcmCertificateRequired7DFF09EF": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-acm-certificate-required",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_ACM_CERTIFICATE_REQUIRED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbCrossZoneLoadBalancingEnabled4933AD2A": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-cross-zone-load-balancing-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbDeletionProtectionEnabled6A44EA2D": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-deletion-protection-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_DELETION_PROTECTION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbLoggingEnabledD68765E9": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-logging-enabled",
        "InputParameters": {
          "s3BucketNames": "aws-accelerator-elb-access-logs-333333333333-us-east-1",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
            "AWS::ElasticLoadBalancingV2::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_LOGGING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorElbLoggingEnabledRemediation": {
      "DependsOn": [
        "AcceleratorElbLoggingEnabledD68765E9",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-elb-logging-enabled",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorElbLoggingEnabledRemediationRole852D593A",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "LoadBalancerArn": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
          "LogDestination": {
            "StaticValue": {
              "Values": [
                "aws-accelerator-elb-access-logs-333333333333-us-east-1",
              ],
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/SSM-ELB-Enable-Logging",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorElbLoggingEnabledRemediationRole852D593A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorElbLoggingEnabledRemediationRoleDefaultPolicy31D14E3C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/SSM-ELB-Enable-Logging",
                  ],
                ],
              },
            },
            {
              "Action": [
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorElbLoggingEnabledRemediationRoleDefaultPolicy31D14E3C",
        "Roles": [
          {
            "Ref": "AcceleratorElbLoggingEnabledRemediationRole852D593A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorElbTlsHttpsListenersOnly59A28904": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-elb-tls-https-listeners-only",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::ElasticLoadBalancing::LoadBalancer",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "ELB_TLS_HTTPS_LISTENERS_ONLY",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorEmrKerberosEnabled27B4E237": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-emr-kerberos-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "EMR_KERBEROS_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorGuarddutyNonArchivedFindings32ED20C9": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-guardduty-non-archived-findings",
        "InputParameters": {
          "daysHighSev": "1",
          "daysLowSev": "30",
          "daysMediumSev": "7",
        },
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "GUARDDUTY_NON_ARCHIVED_FINDINGS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamGroupHasUsersCheck5E15FE54": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-group-has-users-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::Group",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_GROUP_HAS_USERS_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamNoInlinePolicyCheckAE16B56C": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-no-inline-policy-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::User",
            "AWS::IAM::Role",
            "AWS::IAM::Group",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_NO_INLINE_POLICY_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamUserGroupMembershipCheck5D2DBD69": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-user-group-membership-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::IAM::User",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_USER_GROUP_MEMBERSHIP_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorIamUserMfaEnabled119AE0DF": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-iam-user-mfa-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "IAM_USER_MFA_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorInternetGatewayAuthorizedVpcOnly75CCD662": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-internet-gateway-authorized-vpc-only",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::InternetGateway",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorKmsCmkNotScheduledForDeletionF3796D4E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-kms-cmk-not-scheduled-for-deletion",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::KMS::Key",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "KMS_CMK_NOT_SCHEDULED_FOR_DELETION",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorLambdaInsideVpc68BE0CC7": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-lambda-inside-vpc",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::Lambda::Function",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "LAMBDA_INSIDE_VPC",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorRdsLoggingEnabled02B0690C": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-rds-logging-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::RDS::DBInstance",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "RDS_LOGGING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorRedshiftClusterConfigurationCheckC9D7559D": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-redshift-cluster-configuration-check",
        "InputParameters": {
          "clusterDbEncrypted": "TRUE",
          "loggingEnabled": "TRUE",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::Redshift::Cluster",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "REDSHIFT_CLUSTER_CONFIGURATION_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketDefaultLockEnabled1E1E5D5A": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-default-lock-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_DEFAULT_LOCK_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketPolicyGranteeCheckA238FAF4": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-policy-grantee-check",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_POLICY_GRANTEE_CHECK",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketReplicationEnabled54B924AB": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-replication-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_REPLICATION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledB22E11D0": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-server-side-encryption-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledRemediation": {
      "DependsOn": [
        "AcceleratorS3BucketServerSideEncryptionEnabledB22E11D0",
      ],
      "Properties": {
        "Automatic": true,
        "ConfigRuleName": "accelerator-s3-bucket-server-side-encryption-enabled",
        "MaximumAutomaticAttempts": 5,
        "Parameters": {
          "AutomationAssumeRole": {
            "StaticValue": {
              "Values": [
                {
                  "Fn::GetAtt": [
                    "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleC1D55E4D",
                    "Arn",
                  ],
                },
              ],
            },
          },
          "BucketName": {
            "ResourceValue": {
              "Value": "RESOURCE_ID",
            },
          },
          "KMSMasterKey": {
            "StaticValue": {
              "Values": [
                {
                  "Ref": "SsmParameterValueacceleratorkmss3keyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
                },
              ],
            },
          },
        },
        "RetryAttemptSeconds": 60,
        "TargetId": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":ssm:us-east-1:222222222222:document/Put-S3-Encryption",
            ],
          ],
        },
        "TargetType": "SSM_DOCUMENT",
      },
      "Type": "AWS::Config::RemediationConfiguration",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleC1D55E4D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ssm.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleDefaultPolicy8B79DC01": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Config rule remediation role, created by the permission provided in config repository",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:GetAutomationExecution",
                "ssm:StartAutomationExecution",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:PutParameter",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:us-east-1:222222222222:document/Put-S3-Encryption",
                  ],
                ],
              },
            },
            {
              "Action": [
                "s3:GetEncryptionConfiguration",
                "s3:PutEncryptionConfiguration",
              ],
              "Condition": {
                "ArnLike": {
                  "aws:PrincipalArn": [
                    "arn:aws:iam::*:role/AWSAccelerator-SecuritySt-*",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleDefaultPolicy8B79DC01",
        "Roles": [
          {
            "Ref": "AcceleratorS3BucketServerSideEncryptionEnabledRemediationRoleC1D55E4D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AcceleratorS3BucketVersioningEnabledA2D78DD3": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-s3-bucket-versioning-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::S3::Bucket",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "S3_BUCKET_VERSIONING_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorSagemakerEndpointConfigurationKmsKeyConfigured29A26847": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-sagemaker-endpoint-configuration-kms-key-configured",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorSagemakerNotebookInstanceKmsKeyConfigured98505444": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-sagemaker-notebook-instance-kms-key-configured",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorSecurityhubEnabled25B1DE1B": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-securityhub-enabled",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "SECURITYHUB_ENABLED",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorVpcSgOpenOnlyToAuthorizedPorts9EF29973": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-vpc-sg-open-only-to-authorized-ports",
        "InputParameters": {
          "authorizedTcpPorts": "443",
          "authorizedUdpPorts": "1020-1025",
        },
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::SecurityGroup",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AcceleratorVpcVpn2TunnelsUpBED0249E": {
      "DependsOn": [
        "ConfigRecorder",
      ],
      "Properties": {
        "ConfigRuleName": "accelerator-vpc-vpn-2-tunnels-up",
        "InputParameters": {},
        "Scope": {
          "ComplianceResourceTypes": [
            "AWS::EC2::VPNConnection",
          ],
        },
        "Source": {
          "Owner": "AWS",
          "SourceIdentifier": "VPC_VPN_2_TUNNELS_UP",
        },
      },
      "Type": "AWS::Config::ConfigRule",
    },
    "AwsConfigChangesMetricFilter019CEB27": {
      "Properties": {
        "FilterPattern": "{($.eventSource=config.amazonaws.com) && (($.eventName=StopConfigurationRecorder) || ($.eventName=DeleteDeliveryChannel) || ($.eventName=PutDeliveryChannel) || ($.eventName=PutConfigurationRecorder))}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "AWSConfigChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "Cis11RootAccountUsage27B8A444": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for usage of "root" account",
        "AlarmName": "CIS-1.1-RootAccountUsage",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "RootAccountUsage",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis310SecurityGroupChanges08E807D3": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for security group changes",
        "AlarmName": "CIS-3.10-SecurityGroupChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "SecurityGroupChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis311NetworkAclChanges9CF1F1AD": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for changes to Network Access Control Lists (NACL)",
        "AlarmName": "CIS-3.11-NetworkACLChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "NetworkACLChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis312NetworkGatewayChanges1C63367E": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for changes to network gateways",
        "AlarmName": "CIS-3.12-NetworkGatewayChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "NetworkGatewayChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis313RouteTableChanges2799DB8E": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for route table changes",
        "AlarmName": "CIS-3.13-RouteTableChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "RouteTableChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis314VpcChanges4516C762": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for VPC changes",
        "AlarmName": "CIS-3.14-VPCChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "VPCChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis31UnauthorizedApiCallsB850B3C7": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for unauthorized API calls",
        "AlarmName": "CIS-3.1-UnauthorizedAPICalls",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "UnauthorizedAPICalls",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 5,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis32ConsoleSigninWithoutMfa8401FEDF": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for AWS Management Console sign-in without MFA",
        "AlarmName": "CIS-3.2-ConsoleSigninWithoutMFA",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ConsoleSigninWithoutMFA",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis33RootAccountUsage51A91DE1": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for usage of "root" account",
        "AlarmName": "CIS-3.3-RootAccountUsage",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "RootAccountUsage",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis34IamPolicyChangesDD227791": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for IAM policy changes",
        "AlarmName": "CIS-3.4-IAMPolicyChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "IAMPolicyChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis35CloudTrailChanges5766286B": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for CloudTrail configuration changes",
        "AlarmName": "CIS-3.5-CloudTrailChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "CloudTrailChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis36ConsoleAuthenticationFailure01D5FCD6": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm exist for AWS Management Console authentication failures",
        "AlarmName": "CIS-3.6-ConsoleAuthenticationFailure",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "ConsoleAuthenticationFailure",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis37DisableOrDeleteCmkA4096819": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for disabling or scheduled deletion of customer created CMKs",
        "AlarmName": "CIS-3.7-DisableOrDeleteCMK",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "DisableOrDeleteCMK",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis38S3BucketPolicyChangesBCAEEBF2": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for S3 bucket policy changes",
        "AlarmName": "CIS-3.8-S3BucketPolicyChanges.",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "S3BucketPolicyChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Average",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "Cis39AwsConfigChangesD1108027": {
      "Properties": {
        "AlarmActions": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":sns:us-east-1:111111111111:aws-accelerator-Security",
              ],
            ],
          },
        ],
        "AlarmDescription": "Alarm for AWS Config configuration changes",
        "AlarmName": "CIS-3.9-AWSConfigChanges",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "EvaluationPeriods": 1,
        "MetricName": "AWSConfigChanges",
        "Namespace": "LogMetrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 1,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "CloudTrailChangesMetricFilter25ABB504": {
      "Properties": {
        "FilterPattern": "{($.eventName=CreateTrail) || ($.eventName=UpdateTrail) || ($.eventName=DeleteTrail) || ($.eventName=StartLogging) || ($.eventName=StopLogging)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "CloudTrailChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "ConfigDeliveryChannel": {
      "Properties": {
        "ConfigSnapshotDeliveryProperties": {
          "DeliveryFrequency": "One_Hour",
        },
        "S3BucketName": "aws-accelerator-central-logs-333333333333-us-west-2",
      },
      "Type": "AWS::Config::DeliveryChannel",
    },
    "ConfigRecorder": {
      "Properties": {
        "RecordingGroup": {
          "AllSupported": true,
          "IncludeGlobalResourceTypes": true,
        },
        "RoleARN": {
          "Fn::GetAtt": [
            "ConfigRecorderRoleC4E33AA3",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Config::ConfigurationRecorder",
    },
    "ConfigRecorderRoleC4E33AA3": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "ConfigRecorderRole needs managed policy service-role/AWS_ConfigRole to administer config rules",
            },
            {
              "id": "AwsSolutions-IAM5",
              "reason": "ConfigRecorderRole DefaultPolicy is built by cdk.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "config.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWS_ConfigRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ConfigRecorderRoleDefaultPolicyB8261303": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Single bucket",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Condition": {
                "StringLike": {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::aws-accelerator-central-logs-333333333333-us-west-2/*",
              "Sid": "S3WriteAccess",
            },
            {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::aws-accelerator-central-logs-333333333333-us-west-2",
              "Sid": "S3GetAclAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ConfigRecorderRoleDefaultPolicyB8261303",
        "Roles": [
          {
            "Ref": "ConfigRecorderRoleC4E33AA3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ConsoleAuthenticationFailureMetricFilter0F833CC2": {
      "Properties": {
        "FilterPattern": "{($.eventName=ConsoleLogin) && ($.errorMessage="Failed authentication")}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "ConsoleAuthenticationFailure",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "ConsoleSigninWithoutMfaMetricFilter85B015F7": {
      "Properties": {
        "FilterPattern": "{($.eventName = "ConsoleLogin") && ($.additionalEventData.MFAUsed != "Yes") && ($.userIdentity.type = "IAMUser") && ($.responseElements.ConsoleLogin = "Success")}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "ConsoleSigninWithoutMFA",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "CustomSessionManagerLoggingCustomResourceProviderHandler4FE51699": {
      "DependsOn": [
        "CustomSessionManagerLoggingCustomResourceProviderRole1D8EE686",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSessionManagerLoggingCustomResourceProviderRole1D8EE686",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSessionManagerLoggingCustomResourceProviderLogGroupF4E32979": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSessionManagerLoggingCustomResourceProviderHandler4FE51699",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSessionManagerLoggingCustomResourceProviderRole1D8EE686": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:DescribeDocument",
                    "ssm:CreateDocument",
                    "ssm:UpdateDocument",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE": {
      "DependsOn": [
        "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomSsmGetParameterValueCustomResourceProviderLogGroup780D220D": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "KmsKeyId": {
          "Ref": "SsmParameterValueacceleratorkmscloudwatchkeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "CustomSsmGetParameterValueCustomResourceProviderHandlerAAD0E7EE",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "CustomSsmGetParameterValueCustomResourceProviderRoleB3AFDDB2": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ssm:GetParameters",
                    "ssm:GetParameter",
                    "ssm:DescribeParameters",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    "*",
                  ],
                  "Sid": "SsmGetParameterActions",
                },
                {
                  "Action": [
                    "sts:AssumeRole",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":iam::*:role/AWSAccelerator*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "StsAssumeRoleActions",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DisableOrDeleteCmkMetricFilter4217496A": {
      "Properties": {
        "FilterPattern": "{($.eventSource=kms.amazonaws.com) && (($.eventName=DisableKey) || ($.eventName=ScheduleKeyDeletion))}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "DisableOrDeleteCMK",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "IamPolicyChangesMetricFilter29A943B3": {
      "Properties": {
        "FilterPattern": "{($.eventName=DeleteGroupPolicy) || ($.eventName=DeleteRolePolicy) || ($.eventName=DeleteUserPolicy) || ($.eventName=PutGroupPolicy) || ($.eventName=PutRolePolicy) || ($.eventName=PutUserPolicy) || ($.eventName=CreatePolicy) || ($.eventName=DeletePolicy) || ($.eventName=CreatePolicyVersion) || ($.eventName=DeletePolicyVersion) || ($.eventName=AttachRolePolicy) || ($.eventName=DetachRolePolicy) || ($.eventName=AttachUserPolicy) || ($.eventName=DetachUserPolicy) || ($.eventName=AttachGroupPolicy) || ($.eventName=DetachGroupPolicy)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "IAMPolicyChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "MetricFilter1B93B6E5": {
      "Properties": {
        "FilterPattern": "{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "RootAccountUsage",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "NetworkAclChangesMetricFilter87734AD0": {
      "Properties": {
        "FilterPattern": "{($.eventName=CreateNetworkAcl) || ($.eventName=CreateNetworkAclEntry) || ($.eventName=DeleteNetworkAcl) || ($.eventName=DeleteNetworkAclEntry) || ($.eventName=ReplaceNetworkAclEntry) || ($.eventName=ReplaceNetworkAclAssociation)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "NetworkACLChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "NetworkGatewayChangesMetricFilterB8EAA32B": {
      "Properties": {
        "FilterPattern": "{($.eventName=CreateCustomerGateway) || ($.eventName=DeleteCustomerGateway) || ($.eventName=AttachInternetGateway) || ($.eventName=CreateInternetGateway) || ($.eventName=DeleteInternetGateway) || ($.eventName=DetachInternetGateway)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "NetworkGatewayChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "RootAccountMetricFilter2CA28475": {
      "Properties": {
        "FilterPattern": "{$.userIdentity.type="Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType !="AwsServiceEvent"}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "RootAccount",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "RouteTableChangesMetricFilter5DC8694A": {
      "Properties": {
        "FilterPattern": "{($.eventName=CreateRoute) || ($.eventName=CreateRouteTable) || ($.eventName=ReplaceRoute) || ($.eventName=ReplaceRouteTableAssociation) || ($.eventName=DeleteRouteTable) || ($.eventName=DeleteRoute) || ($.eventName=DisassociateRouteTable)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "RouteTableChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "S3BucketPolicyChangesMetricFilter2247C8C8": {
      "Properties": {
        "FilterPattern": "{($.eventSource=s3.amazonaws.com) && (($.eventName=PutBucketAcl) || ($.eventName=PutBucketPolicy) || ($.eventName=PutBucketCors) || ($.eventName=PutBucketLifecycle) || ($.eventName=PutBucketReplication) || ($.eventName=DeleteBucketPolicy) || ($.eventName=DeleteBucketCors) || ($.eventName=DeleteBucketLifecycle) || ($.eventName=DeleteBucketReplication))}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "S3BucketPolicyChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "SecurityGroupChangesMetricFilterE0B65A44": {
      "Properties": {
        "FilterPattern": "{($.eventName=AuthorizeSecurityGroupIngress) || ($.eventName=AuthorizeSecurityGroupEgress) || ($.eventName=RevokeSecurityGroupIngress) || ($.eventName=RevokeSecurityGroupEgress) || ($.eventName=CreateSecurityGroup) || ($.eventName=DeleteSecurityGroup)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "SecurityGroupChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5": {
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C",
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "Creates a CloudWatch Logs Group to store SecurityHub findings and updates CW Log Group resource policy",
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Ref": "SsmParameterValueacceleratorkmslambdakeyarnC96584B6F00A464EAD1953AFF4B05118Parameter",
        },
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 180,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionResourceLogGroupB7A99902": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
              },
            ],
          ],
        },
        "RetentionInDays": 3653,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionSecurityHubEventsFunctionResourceF6D56745": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunctionResourceLogGroupB7A99902",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEvent1729ADC9",
            "Arn",
          ],
        },
        "logGroupArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":logs:us-east-1:111111111111:log-group:/*:*",
            ],
          ],
        },
        "logGroupName": "/AWSAccelerator-SecurityHub",
        "uuid": "REPLACED-UUID",
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Lambda needs Managed policy.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "AWS Lambda needs Managed policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:us-east-1:111111111111:log-group:/AWSAccelerator-SecurityHub*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "logs:DescribeLogGroups",
                "logs:PutResourcePolicy",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:us-east-1:111111111111:log-group:*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C",
        "Roles": [
          {
            "Ref": "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEvent1729ADC9": {
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-111111111111-us-east-1",
          "S3Key": "REPLACED-GENERATED-NAME.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (AWSAccelerator-SecurityResourcesStack-111111111111-us-east-1/SecurityHubEventsLog/SecurityHubEventsFunction/Resource)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Custom resource provider framework-role created by cdk.",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85": {
      "Metadata": {
        "cdk_nag": {
          "rules_to_suppress": [
            {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85",
        "Roles": [
          {
            "Ref": "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SecurityHubEventsLogSecurityHubLogEventsRule9AC6959D": {
      "DependsOn": [
        "SecurityHubEventsLogSecurityHubEventsFunction6170C5C5",
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRoleDefaultPolicy56E1474C",
        "SecurityHubEventsLogSecurityHubEventsFunctionServiceRole3A655D2A",
        "SecurityHubEventsLogSecurityHubEventsFunctionResourceLogGroupB7A99902",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEvent1729ADC9",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRoleDefaultPolicy4C5BFF85",
        "SecurityHubEventsLogSecurityHubEventsFunctionframeworkonEventServiceRole2DBDE006",
        "SecurityHubEventsLogSecurityHubEventsFunctionSecurityHubEventsFunctionResourceF6D56745",
      ],
      "Properties": {
        "Description": "Sends Security Hub Findings above threshold to CloudWatch Logs",
        "EventPattern": {
          "detail-type": [
            "Security Hub Findings - Imported",
          ],
          "source": [
            "aws.securityhub",
          ],
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":logs:us-east-1:111111111111:log-group:/AWSAccelerator-SecurityHub:*",
                ],
              ],
            },
            "Id": "CloudWatchLogTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SecurityHubEventsLogSecurityHubSnsEventsRule3900A9EA": {
      "Properties": {
        "Description": "Sends Security Hub Findings above threshold to SNS",
        "EventPattern": {
          "detail": {
            "findings": {
              "Severity": {
                "Label": [
                  "CRITICAL",
                  "HIGH",
                ],
              },
            },
          },
          "detail-type": [
            "Security Hub Findings - Imported",
          ],
          "source": [
            "aws.securityhub",
          ],
        },
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition",
                  },
                  ":sns:us-east-1:111111111111:aws-accelerator-Security",
                ],
              ],
            },
            "Id": "SnsTarget",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "SsmParamAcceleratorVersionFF83282D": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-SecurityResourcesStack-111111111111-us-east-1/version",
        "Type": "String",
        "Value": "1.9.2",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": {
      "Properties": {
        "Name": "/accelerator/AWSAccelerator-SecurityResourcesStack-111111111111-us-east-1/stack-id",
        "Type": "String",
        "Value": {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmSessionManagerSettings24721AC9": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "CustomSessionManagerLoggingCustomResourceProviderLogGroupF4E32979",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomSessionManagerLoggingCustomResourceProviderHandler4FE51699",
            "Arn",
          ],
        },
        "cloudWatchEncryptionEnabled": false,
        "cloudWatchLogGroupName": "",
        "kmsKeyId": {
          "Ref": "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C",
        },
        "s3BucketName": "aws-accelerator-central-logs-333333333333-us-west-2",
        "s3EncryptionEnabled": true,
        "s3KeyPrefix": {
          "Fn::Join": [
            "",
            [
              "session/",
              {
                "Ref": "AWS::AccountId",
              },
              "/us-east-1",
            ],
          ],
        },
      },
      "Type": "Custom::SsmSessionManagerSettings",
      "UpdateReplacePolicy": "Delete",
    },
    "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "Description": "AWS Accelerator Session Manager Session Encryption",
        "EnableKeyRotation": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "SsmSessionManagerSettingsSessionManagerSessionKeyAlias59E0224E": {
      "Properties": {
        "AliasName": "alias/accelerator/sessionmanager-logs/session",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "SsmSessionManagerSettingsSessionManagerUserKMSPolicyFB96BB42": {
      "Properties": {
        "Description": "",
        "ManagedPolicyName": "AWSAccelerator-SessionManagerUserKMS-us-east-1",
        "Path": "/",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SsmSessionManagerSettingsSessionManagerSessionKey23B7175C",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "UnauthorizedApiCallsMetricFilter95DF459D": {
      "Properties": {
        "FilterPattern": "{($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "UnauthorizedAPICalls",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
    "VpcChangesMetricFilter309EC3DF": {
      "Properties": {
        "FilterPattern": "{($.eventName=CreateVpc) || ($.eventName=DeleteVpc) || ($.eventName=ModifyVpcAttribute) || ($.eventName=AcceptVpcPeeringConnection) || ($.eventName=CreateVpcPeeringConnection) || ($.eventName=DeleteVpcPeeringConnection) || ($.eventName=RejectVpcPeeringConnection) || ($.eventName=AttachClassicLinkVpc) || ($.eventName=DetachClassicLinkVpc) || ($.eventName=DisableVpcClassicLink) || ($.eventName=EnableVpcClassicLink)}",
        "LogGroupName": "aws-controltower/CloudTrailLogs",
        "MetricTransformations": [
          {
            "MetricName": "VPCChanges",
            "MetricNamespace": "LogMetrics",
            "MetricValue": "1",
          },
        ],
      },
      "Type": "AWS::Logs::MetricFilter",
    },
  },
}
`;
